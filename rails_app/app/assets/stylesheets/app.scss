//Sassy

//  アプリ全体の共通設定。
* {
  //  ディスプレイの横幅最大値。
  --height: 100vh;              //  フォールバック。
  --width: 100vw;
  --height: var(--js--height);  //  JSから「画面有効範囲」を受け取る
  --width: var(--js--width);
  @media screen and (min-width: 414px) {
    --width: 414px;
  }

  font-family: system-ui;
  font-family: "Menlo", monospace;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  box-sizing: border-box;
  -webkit-tap-highlight-color:rgba(0,0,0,0);
}
//  変数の定義
* {
  --color--backboard--bg: silver;
  --border--great: 10px;
  --color--backboard--border: black;
  overscroll-behavior: none;
  --tear--width: 60px;
  --tear--height: 60px;
}
body {
  * {
    display: grid;
  //  TODO  開発用。赤枠を表示。
  //  border: 0.5px solid red;
  }

  //  基本、すべてグリッドで管理する。
  display: grid;
  background: darkgray;
  margin: 0px;
  justify-content: center;
  overflow: scroll;
}

//  コンテンツを中央に表示する。
centering {
  justify-content: center;
  align-items: center;
}

#top {}
#middle {
  grid-template-columns: auto 1fr;
  grid-template-rows: 1fr;
}
#bottom {
  grid-template-rows: 1fr 2fr 1fr;
}


// PC画面用。画面左右を隠す板。
_cover {
  position: absolute;
  --cover-width: calc((100vw - var(--width)) / 2);
  width: var(--cover-width);
  height: var(--height);
  background: darkgray;
  z-index: 10;
  @media not screen and (min-width: 414px) {
    display: none;
  }     
}       
#cover_left {
  @extend _cover;
  transform: translateX(calc(-1 * var(--cover-width)));
}       
#cover_right {
  @extend _cover; 
  transform: translateX(calc(var(--width)));
} 

//  背景板。
#backboard {
  position: relative;
  overflow: hidden;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(3, 1fr);
  margin: 0px;
  background: var(--color--backboard--bg);
  border: var(--border--great) solid var(--color--backboard--border);

  height: var(--height);
  width: var(--width);
  justify-content: center;
}

_palette {
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(4, 1fr);
  height: calc(var(--height) * 0.3);
}

#basic_colors {
  @extend _palette;
  div {
    transition: 0.3s;
    --border: 2px;
    &.selected {
      --margin: 2px;
      border: var(--border) solid black;
      border-radius: 50%;
      width: calc(100% - var(--margin) * 2);
      height: calc(100% - var(--margin) * 2);
      margin: var(--margin);
    }
    &.current {
      border: var(--border) solid white;
    }
  }
}

#saturations {
  @extend _palette;
}

#brightnesses {
  @extend _palette;
}

#gradation {
  position: relative;
  --grid-num: 16;
  grid-template-columns: repeat(var(--grid-num), 1fr);
  grid-template-rows: repeat(var(--grid-num), 1fr);
  height: calc(var(--height) * 0.3);
  width: calc(var(--height) * 0.3);
  background: green;
  border: 1px solid black;
}
#picked_colors {
  @extend _palette;
  position: relative;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(4, 1fr);
  border: 0.5px solid black;
  div {
    border: 0.5px solid black;
  }
}

div {
  color: red;
}

#pages {
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: 1fr;
  border: 0.5px solid black;

  div {
    @extend centering;
    border: 0.5px solid black;
    color: black;
    font-weight: bold;
  }
}

.cell--picked {
  position: relative;
  --deg: 45deg;
  --border: 2px;
  display: flex;
  @extend centering;
  &.current {
    border: var(--border) solid black !important;
    border-image: linear-gradient(var(--deg), white 0%, black 100%) !important;
    border-image-slice: 1 !important;
  }
  #erase {
    position: absolute;
    @extend .tear;
    i {
      color: black;
      transform: rotate(-135deg);
    }
    --margin-v: 0px;
    --margin-h: 10px;
    z-index: 10;
    top: calc(-1 * var(--tear--width));
  }
}
.cell--gradation {
  --deg: 45deg;
  --border: 1px;
  --color-l: white;
  --color-r: black;
  &.pointer {
    border: var(--border) solid black;
    border-image: linear-gradient(var(--deg), var(--color-l) 0%, var(--color-r) 100%);
    border-image-slice: 1;
    &.current {
      --color-l: red;
      --color-r: blue;
    }
  }
}
.page.current {
  border: 2px solid black !important;
  background: pink;
}

.hidden {
  display: none !important;
}

.tear {
  width: var(--tear--width);
  height: var(--tear--height);
  border-radius: 80% 0 55% 50% / 55% 0 80% 50%;
  border: 3px solid black;
  transform: rotate(135deg);
  background: white;
  @extend centering;
}

#color_info {
  display: flex;
  position: absolute;
  background: transparent;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
  div {
    position: absolute;
    padding: 10px;
    color: black;
    background: white;
    border: 0.5px solid black;
    border-radius: 15px;
    width: auto;
    height: auto;
  }
}
